package lib

import org.kohsuke.github.GHUser

object AccountRequirements {
  val All = Seq(FullNameRequirement, TwoFactorAuthRequirement, SponsorRequirement)

  def failedBy(user: GHUser): Seq[AccountRequirement] = All.filterNot(_.isSatisfiedBy(user))
}

trait AccountRequirement {
  val issueLabel: String // eg 'TwoFactorAuth', 'FullName'

  def isSatisfiedBy(user: GHUser): Boolean

  val fixSummary: String
}

object FullNameRequirement extends AccountRequirement {

  override val issueLabel = "FullName"

  override val fixSummary = "Enter a full name in your [GitHub profile](https://github.com/settings/profile)."

  /*
Currently, the GitHub API only populates the 'name' field of the user when you've directly
called the 'user' endpoint for that user (eg it's not set on the Org-Members list users).
So the User provided to this method needs to have been generated by a hit to the User endpoint...
 */
  override def isSatisfiedBy(user: GHUser) = Option(user.getName).map(_.length > 6).getOrElse(false)

}

/*
The only way to get information about 2FA-deficient users is using the Org-Member listing endpoint
with a filter:

http://developer.github.com/changes/2014-01-29-audit-org-members-for-2fa/
 */
object TwoFactorAuthRequirement extends AccountRequirement {

  val twoFactorAuthDisabledUserLogins = Set("rtyley")

  override val issueLabel = "TwoFactorAuth"

  override val fixSummary =
    "Enable [Two-Factor Authentication](https://help.github.com/articles/about-two-factor-authentication) " +
      "in your [GitHub account settings](https://github.com/settings/admin)."

  override def isSatisfiedBy(user: GHUser) = !twoFactorAuthDisabledUserLogins.contains(user.getLogin)

}

object SponsorRequirement extends AccountRequirement {

  val sponsoredUserLogins = Set("lindseydew")

  override val issueLabel = "Sponsor"

  override val fixSummary =
    "Get a Pull-Request opened to add your username to our " +
      "[users.txt](https://github.com/guardian/people/blob/master/users.txt) file " +
      "_- ideally, a Guardian Tech Lead or Dev Manager should open this request for you_."

  override def isSatisfiedBy(user: GHUser): Boolean = sponsoredUserLogins.contains(user.getLogin)

}